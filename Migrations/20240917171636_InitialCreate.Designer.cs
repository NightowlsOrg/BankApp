// <auto-generated />
using System;
using BankApp.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BankApp.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240917171636_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("BankApp.Models.KundDataModel", b =>
                {
                    b.Property<Guid>("KundId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Efternamn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Epost")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Förnamn")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lösenord")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Personnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Postnummer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Postort")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tele")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("KundId");

                    b.ToTable("Kunder");

                    b.HasData(
                        new
                        {
                            KundId = new Guid("004c07d8-8f3d-49fc-9766-8cedcd291c13"),
                            Adress = "Knasgatan 1",
                            Efternamn = "Knasare",
                            Epost = "knaspelle.knasare@knas.se",
                            Förnamn = "Knaspelle",
                            IsAdmin = false,
                            Lösenord = "knaspass",
                            Personnummer = "1977-04-25",
                            Postnummer = "123 45",
                            Postort = "Knasby",
                            Tele = "070-123 45 67"
                        },
                        new
                        {
                            KundId = new Guid("f5b54980-14e0-4ab4-af96-a861a1ce5c56"),
                            Adress = "Ankgatan 1",
                            Efternamn = "Ankare",
                            Epost = "ankpelle.ankare@ank.se",
                            Förnamn = "Ankpelle",
                            IsAdmin = false,
                            Lösenord = "ankpass",
                            Personnummer = "2011-09-11",
                            Postnummer = "543 21",
                            Postort = "Ankby",
                            Tele = "070-765 43 21"
                        },
                        new
                        {
                            KundId = new Guid("057c0933-21d1-405a-8292-c8801fb09092"),
                            Adress = "Testgatan 1",
                            Efternamn = "Testare",
                            Epost = "test.testare@testby.se",
                            Förnamn = "Test",
                            IsAdmin = false,
                            Lösenord = "pass",
                            Personnummer = "1111-11-11",
                            Postnummer = "111 11",
                            Postort = "Testby",
                            Tele = "111-111 11 11"
                        });
                });

            modelBuilder.Entity("BankApp.Models.SparkontoDataModel", b =>
                {
                    b.Property<Guid>("SparkontoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("KundId")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("TEXT");

                    b.HasKey("SparkontoId");

                    b.HasIndex("KundId");

                    b.ToTable("Sparkonton");
                });

            modelBuilder.Entity("BankApp.Models.SparkontoDataModel", b =>
                {
                    b.HasOne("BankApp.Models.KundDataModel", "Kund")
                        .WithMany()
                        .HasForeignKey("KundId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kund");
                });
#pragma warning restore 612, 618
        }
    }
}
